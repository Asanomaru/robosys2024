#!/usr/bin/python3
# SPDX-FileCopyrightText: 2024 Yuuki Udagawa 
# SPDX-License-Identifier: BSD-3-Clause

import sys

user_input_text = sys.stdin.read().strip()

try:
    if not user_input_text:
        raise ValueError()

    japanse = False
    for char in user_input_text:
        if ("\u3040" <= char <= "\u3090F") or ("\u30A0" <= char <= "\u30FF") or ("\u4E00" <= char <= "\u9FFF"):
            japanse = True
        break

    if japanse:
        raise ValueError()

    words = user_input_text.split()

    cleaned_words = []
    for word in words:
        cleaned_word = word.rstrip(".")
        cleaned_words.append(cleaned_word)


    cleaned_text = " ".join(cleaned_words)


    chars = []
    for char in cleaned_text:
        if not char.isspace():
            chars.append(char)

    non_alpha = []
    for char in chars:
        non_alpha.append(not char.isalpha())

    only_numbers_symbols = True
    for char2 in non_alpha:
        if not char2:
            only_numbers_symbols = False
            break

    if only_numbers_symbols:
        raise ValueError()

    character_count = len(cleaned_text)
    word_count = len(cleaned_words)
    word_list = list(cleaned_words)

    print("{} {}".format(character_count, word_count))


except ValueError:
    sys.exit(1)
